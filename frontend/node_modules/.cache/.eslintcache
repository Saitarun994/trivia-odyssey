[{"C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\index.js":"1","C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\App.js":"2","C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\components\\Header.js":"4","C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\components\\Body.js":"5","C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\components\\Footer.js":"6","C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\data\\hotspots.js":"7","C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\components\\Card.js":"8","C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\components\\headerLogin.js":"9","C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\components\\headerLogout.js":"10","C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\components\\LoginButton.js":"11","C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\components\\LogoutButton.js":"12"},{"size":885,"mtime":1699148780525,"results":"13","hashOfConfig":"14"},{"size":565,"mtime":1699149295821,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1699119642105,"results":"16","hashOfConfig":"14"},{"size":519,"mtime":1699184929617,"results":"17","hashOfConfig":"14"},{"size":3214,"mtime":1699187411652,"results":"18","hashOfConfig":"14"},{"size":1778,"mtime":1699181389079,"results":"19","hashOfConfig":"14"},{"size":929,"mtime":1699127712168,"results":"20","hashOfConfig":"14"},{"size":1204,"mtime":1699187676561,"results":"21","hashOfConfig":"14"},{"size":1597,"mtime":1699144239575,"results":"22","hashOfConfig":"14"},{"size":317,"mtime":1699144283477,"results":"23","hashOfConfig":"14"},{"size":1696,"mtime":1699151013609,"results":"24","hashOfConfig":"14"},{"size":1526,"mtime":1699149534038,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"bzb6r7",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\index.js",[],[],["67","68","69","70","71","72"],"C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\App.js",[],[],"C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\components\\Header.js",[],[],"C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\components\\Body.js",["73","74"],[],"import React from 'react'\r\n//import hotspots from \"../data/hotspots\"\r\nimport Card from \"./Card\"\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\n\r\n\r\nconst loc=\"\";\r\nfunction Body() {\r\n\r\n  //! Sending location to server\r\n  const [hotspots, setHotspots] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n   /*\r\n  useEffect(() => {\r\n    // Define the endpoint URL, replacing lat and lon with actual values\r\n   \r\n    const endpoint = '/api/rochester/'+\"43.1290992&-77.6290233\";\r\n    console.log(endpoint);\r\n    // Make the API request\r\n    axios.get(endpoint)\r\n      .then(response => {\r\n        // Extract the data from the response\r\n        const data = response.data;\r\n        console.log(data);\r\n        // Set the data to the hotspots state\r\n        setHotspots(data);\r\n      })\r\n      .catch(error => {\r\n        console.error('API request error:', error);\r\n      });\r\n  }, []); // The empty dependency array ensures this effect runs only once\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Define the endpoint URL, replacing lat and lon with actual values\r\n    \r\n    const endpoint = '/api/getquestions/'+\"43.1290992&-77.6290233\";\r\n    console.log(endpoint);\r\n    // Make the API request\r\n    axios.get(endpoint)\r\n      .then(response => {\r\n        // Extract the data from the response\r\n        const data = response.data;\r\n        console.log(data);\r\n        // Set the data to the hotspots state\r\n        setHotspots(data);\r\n      })\r\n      .catch(error => {\r\n        console.error('API request error:', error);\r\n      });\r\n      .finally(() => {\r\n        setIsLoading(false); // Set loading state to false when done\r\n      });\r\n  }, []); // The empty dependency array ensures this effect runs only once\r\n  */\r\n\r\n  //? Api loading logic\r\n  useEffect(() => {\r\n    // Define the endpoint URL, replacing lat and lon with actual values\r\n    const endpoint = '/api/rochester/' + '43.1290992&-77.6290233';\r\n    console.log(endpoint);\r\n    // Make the API request\r\n    axios\r\n      .get(endpoint)\r\n      .then((response) => {\r\n        // Extract the data from the response\r\n        const data = response.data;\r\n        console.log(data);\r\n        // Set the data to the hotspots state\r\n        setHotspots(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('API request error:', error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false); // Set loading state to false when done\r\n      });\r\n  }, []);\r\n\r\n\r\n      //console.log(hotspot.questions);\r\n  return (\r\n    <div className=\"flex flex-col md:flex-row items-center justify-center p-2 bg-purple-100 min-h-[600px]\">\r\n      {isLoading ? ( // Show \"Loading...\" text if isLoading is true\r\n        <p className=\"text-3xl\">Loading...</p>\r\n      ) : (\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n      \r\n      {hotspots.map(hotspot=>(\r\n            <Card\r\n                name={hotspot.name}\r\n                ilink={hotspot.ilink}\r\n                desc={hotspot.desc}\r\n                link={hotspot.link}\r\n                \r\n            />\r\n        ))}\r\n      </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nexport default Body\r\n","C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\components\\Footer.js",[],[],"C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\data\\hotspots.js",[],[],"C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\components\\Card.js",["75"],[],"C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\components\\headerLogin.js",["76","77","78"],[],"import React, { useState, useEffect } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport LoginButton from './LoginButton';\n\nconst HeaderLogin = () => {\n  const [username, setUsername] = useState('');\n  const [location, setLocation] = useState('');\n  const { loginWithRedirect, isAuthenticated } = useAuth0();\n  useEffect(() => {\n    // Simulating the retrieval of username (replace this with your actual method of getting the username)\n    // For demonstration purposes, it's set after 2 seconds using setTimeout\n    const fetchUsername = () => {\n      // Simulating a delay (2 seconds) to get the username\n      setTimeout(() => {\n        // Replace this with your actual method of retrieving the username (e.g., fetching from backend, local storage, etc.)\n        const fakeUsername = \"JohnDoe\"; // Replace this with the actual username\n        setUsername(fakeUsername);\n      }, 2000);\n    };\n\n    // Simulating the retrieval of location (using geolocation API)\n    const fetchLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            setLocation(`Latitude: ${position.coords.latitude}, Longitude: ${position.coords.longitude}`);\n          },\n          (error) => {\n            setLocation('Location not available');\n          }\n        );\n      } else {\n        setLocation('Geolocation is not supported by your browser');\n      }\n    };\n\n    fetchUsername();\n    fetchLocation();\n  }, []);\n\n  return (\n    !isAuthenticated && (\n    <LoginButton />\n    )\n  );\n};\n\nexport default HeaderLogin;","C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\components\\headerLogout.js",["79"],[],"import React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport LogoutButton from './LogoutButton';\n\n\nconst HeaderLogout = () => {\n  const { loginWithRedirect, isAuthenticated } = useAuth0();\n\n\n  return (\n    isAuthenticated && (\n    <LogoutButton />\n    \n    )\n\n  );\n};\n\nexport default HeaderLogout;","C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\components\\LoginButton.js",["80","81","82"],[],"import { useAuth0 } from '@auth0/auth0-react';\nimport React, { useState, useEffect } from 'react';\n\nconst LoginButton = () => {\n    const { loginWithRedirect, isAuthenticated } = useAuth0();\n    const [location, setLocation] = useState('');\n    const disploc =\"\";\n    useEffect(() => {\n      // Fetching username if the user is authenticated\n     \n        \n        // Simulating the retrieval of location (using geolocation API)\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(\n            async (position) =>{\n              setLocation(`Latitude: ${position.coords.latitude}, Longitude: ${position.coords.longitude}`);\n              disploc = await fetch(\"https://nominatim.openstreetmap.org/resvers?lat=\"+position.coords.latitude+\"&lon=\"+position.coords.longitude+\"&format=json\").then((res)=> {\n              \n              return(res.json())\n\n            })\n            console.log(disploc)\n            },\n            (error) => {\n              setLocation('Location not available');\n            }\n          );\n        } else {\n          setLocation('Geolocation is not supported by your browser');\n        }\n      \n    }, [isAuthenticated]);\n\n    return (\n        !isAuthenticated && (\n            <div className=\"bg-blue-500 p-4 text-white flex items-center justify-between\">\n      <div>\n      <p>Location: {disploc.address.city}</p>\n        <img src=\"google-quiz.svg\" alt=\"Login\" className=\"h-6 w-6 mr-2\" />\n      </div>\n      <h1 className=\"text-xl font-bold\">Trivia Odyssey</h1>\n      <button onClick={loginWithRedirect} className=\"bg-white text-blue-500 py-2 px-4 rounded\">Sign In</button>\n    </div>\n        )\n    )\n}\n\nexport default LoginButton\n","C:\\Users\\Sai Tarun\\Desktop\\Trivia odyssey\\trivia-odyssey\\frontend\\src\\components\\LogoutButton.js",[],[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":8,"column":7,"nodeType":"97","messageId":"98","endLine":8,"endColumn":10},{"ruleId":"99","severity":1,"message":"100","line":63,"column":40,"nodeType":"101","messageId":"102","endLine":63,"endColumn":41},{"ruleId":"103","severity":1,"message":"104","line":12,"column":9,"nodeType":"105","endLine":16,"endColumn":13},{"ruleId":"95","severity":1,"message":"106","line":6,"column":10,"nodeType":"97","messageId":"98","endLine":6,"endColumn":18},{"ruleId":"95","severity":1,"message":"107","line":7,"column":10,"nodeType":"97","messageId":"98","endLine":7,"endColumn":18},{"ruleId":"95","severity":1,"message":"108","line":8,"column":11,"nodeType":"97","messageId":"98","endLine":8,"endColumn":28},{"ruleId":"95","severity":1,"message":"108","line":7,"column":11,"nodeType":"97","messageId":"98","endLine":7,"endColumn":28},{"ruleId":"95","severity":1,"message":"107","line":6,"column":12,"nodeType":"97","messageId":"98","endLine":6,"endColumn":20},{"ruleId":"109","severity":1,"message":"110","line":17,"column":15,"nodeType":"97","messageId":"111","endLine":17,"endColumn":22},{"ruleId":"112","severity":1,"message":"113","line":17,"column":25,"nodeType":"114","endLine":21,"endColumn":15},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["115"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'loc' is assigned a value but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'username' is assigned a value but never used.","'location' is assigned a value but never used.","'loginWithRedirect' is assigned a value but never used.","no-const-assign","'disploc' is constant.","const","react-hooks/exhaustive-deps","Assignments to the 'disploc' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","AwaitExpression","no-object-constructor"]