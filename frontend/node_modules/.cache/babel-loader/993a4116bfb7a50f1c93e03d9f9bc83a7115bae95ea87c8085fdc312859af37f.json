{"ast":null,"code":"import _slicedToArray from\"C:/Users/Sai Tarun/Desktop/Trivia odyssey/trivia-odyssey/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';//import hotspots from \"../data/hotspots\"\nimport Card from\"./Card\";import{useEffect,useState}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";var loc=\"\";function Body(){//! Sending location to server\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),hotspots=_useState2[0],setHotspots=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];/*\r\n  useEffect(() => {\r\n    // Define the endpoint URL, replacing lat and lon with actual values\r\n   \r\n    const endpoint = '/api/rochester/'+\"43.1290992&-77.6290233\";\r\n    console.log(endpoint);\r\n    // Make the API request\r\n    axios.get(endpoint)\r\n      .then(response => {\r\n        // Extract the data from the response\r\n        const data = response.data;\r\n        console.log(data);\r\n        // Set the data to the hotspots state\r\n        setHotspots(data);\r\n      })\r\n      .catch(error => {\r\n        console.error('API request error:', error);\r\n      });\r\n  }, []); // The empty dependency array ensures this effect runs only once\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Define the endpoint URL, replacing lat and lon with actual values\r\n    \r\n    const endpoint = '/api/getquestions/'+\"43.1290992&-77.6290233\";\r\n    console.log(endpoint);\r\n    // Make the API request\r\n    axios.get(endpoint)\r\n      .then(response => {\r\n        // Extract the data from the response\r\n        const data = response.data;\r\n        console.log(data);\r\n        // Set the data to the hotspots state\r\n        setHotspots(data);\r\n      })\r\n      .catch(error => {\r\n        console.error('API request error:', error);\r\n      });\r\n      .finally(() => {\r\n        setIsLoading(false); // Set loading state to false when done\r\n      });\r\n  }, []); // The empty dependency array ensures this effect runs only once\r\n  */ //? Api loading logic\nuseEffect(function(){// Define the endpoint URL, replacing lat and lon with actual values\nvar endpoint='/api/rochester/'+'43.1290992&-77.6290233';console.log(endpoint);// Make the API request\naxios.get(endpoint).then(function(response){// Extract the data from the response\nvar data=response.data;console.log(data);// Set the data to the hotspots state\nsetHotspots(data);}).catch(function(error){console.error('API request error:',error);}).finally(function(){setIsLoading(false);// Set loading state to false when done\n});},[]);//console.log(hotspot.questions);\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col md:flex-row items-center justify-center p-2 bg-purple-200 min-h-[600px]\",children:isLoading?/*#__PURE__*/ // Show \"Loading...\" text if isLoading is true\n_jsx(\"p\",{className:\"text-xl shadow-md\",children:\"Loading...\"}):/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",children:hotspots.map(function(hotspot){return/*#__PURE__*/_jsx(Card,{name:hotspot.name,ilink:hotspot.ilink,desc:hotspot.desc,link:hotspot.link});})})});}export default Body;","map":{"version":3,"names":["React","Card","useEffect","useState","axios","jsx","_jsx","loc","Body","_useState","_useState2","_slicedToArray","hotspots","setHotspots","_useState3","_useState4","isLoading","setIsLoading","endpoint","console","log","get","then","response","data","catch","error","finally","className","children","map","hotspot","name","ilink","desc","link"],"sources":["C:/Users/Sai Tarun/Desktop/Trivia odyssey/trivia-odyssey/frontend/src/components/Body.js"],"sourcesContent":["import React from 'react'\r\n//import hotspots from \"../data/hotspots\"\r\nimport Card from \"./Card\"\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\n\r\n\r\nconst loc=\"\";\r\nfunction Body() {\r\n\r\n  //! Sending location to server\r\n  const [hotspots, setHotspots] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n   /*\r\n  useEffect(() => {\r\n    // Define the endpoint URL, replacing lat and lon with actual values\r\n   \r\n    const endpoint = '/api/rochester/'+\"43.1290992&-77.6290233\";\r\n    console.log(endpoint);\r\n    // Make the API request\r\n    axios.get(endpoint)\r\n      .then(response => {\r\n        // Extract the data from the response\r\n        const data = response.data;\r\n        console.log(data);\r\n        // Set the data to the hotspots state\r\n        setHotspots(data);\r\n      })\r\n      .catch(error => {\r\n        console.error('API request error:', error);\r\n      });\r\n  }, []); // The empty dependency array ensures this effect runs only once\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Define the endpoint URL, replacing lat and lon with actual values\r\n    \r\n    const endpoint = '/api/getquestions/'+\"43.1290992&-77.6290233\";\r\n    console.log(endpoint);\r\n    // Make the API request\r\n    axios.get(endpoint)\r\n      .then(response => {\r\n        // Extract the data from the response\r\n        const data = response.data;\r\n        console.log(data);\r\n        // Set the data to the hotspots state\r\n        setHotspots(data);\r\n      })\r\n      .catch(error => {\r\n        console.error('API request error:', error);\r\n      });\r\n      .finally(() => {\r\n        setIsLoading(false); // Set loading state to false when done\r\n      });\r\n  }, []); // The empty dependency array ensures this effect runs only once\r\n  */\r\n\r\n  //? Api loading logic\r\n  useEffect(() => {\r\n    // Define the endpoint URL, replacing lat and lon with actual values\r\n    const endpoint = '/api/rochester/' + '43.1290992&-77.6290233';\r\n    console.log(endpoint);\r\n    // Make the API request\r\n    axios\r\n      .get(endpoint)\r\n      .then((response) => {\r\n        // Extract the data from the response\r\n        const data = response.data;\r\n        console.log(data);\r\n        // Set the data to the hotspots state\r\n        setHotspots(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('API request error:', error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false); // Set loading state to false when done\r\n      });\r\n  }, []);\r\n\r\n\r\n      //console.log(hotspot.questions);\r\n  return (\r\n    <div className=\"flex flex-col md:flex-row items-center justify-center p-2 bg-purple-200 min-h-[600px]\">\r\n      {isLoading ? ( // Show \"Loading...\" text if isLoading is true\r\n        <p className=\"text-xl shadow-md\">Loading...</p>\r\n      ) : (\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n      \r\n      {hotspots.map(hotspot=>(\r\n            <Card\r\n                name={hotspot.name}\r\n                ilink={hotspot.ilink}\r\n                desc={hotspot.desc}\r\n                link={hotspot.link}\r\n                \r\n            />\r\n        ))}\r\n      </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nexport default Body\r\n"],"mappings":"uJAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB;AACA,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,OAASC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,MAAO,CAAAC,KAAK,KAAM,OAAO,QAAAC,GAAA,IAAAC,IAAA,yBAGzB,GAAM,CAAAC,GAAG,CAAC,EAAE,CACZ,QAAS,CAAAC,IAAIA,CAAA,CAAG,CAEd;AACA,IAAAC,SAAA,CAAgCN,QAAQ,CAAC,EAAE,CAAC,CAAAO,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAArCG,QAAQ,CAAAF,UAAA,IAAEG,WAAW,CAAAH,UAAA,IAC5B,IAAAI,UAAA,CAAkCX,QAAQ,CAAC,IAAI,CAAC,CAAAY,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAzCE,SAAS,CAAAD,UAAA,IAAEE,YAAY,CAAAF,UAAA,IAE7B;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IA3CG,CA6CD;AACAb,SAAS,CAAC,UAAM,CACd;AACA,GAAM,CAAAgB,QAAQ,CAAG,iBAAiB,CAAG,wBAAwB,CAC7DC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CACrB;AACAd,KAAK,CACFiB,GAAG,CAACH,QAAQ,CAAC,CACbI,IAAI,CAAC,SAACC,QAAQ,CAAK,CAClB;AACA,GAAM,CAAAC,IAAI,CAAGD,QAAQ,CAACC,IAAI,CAC1BL,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC,CACjB;AACAX,WAAW,CAACW,IAAI,CAAC,CACnB,CAAC,CAAC,CACDC,KAAK,CAAC,SAACC,KAAK,CAAK,CAChBP,OAAO,CAACO,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC5C,CAAC,CAAC,CACDC,OAAO,CAAC,UAAM,CACbV,YAAY,CAAC,KAAK,CAAC,CAAE;AACvB,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAGF;AACJ,mBACEX,IAAA,QAAKsB,SAAS,CAAC,uFAAuF,CAAAC,QAAA,CACnGb,SAAS,eAAK;AACbV,IAAA,MAAGsB,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAAC,YAAU,CAAG,CAAC,cAGjDvB,IAAA,QAAKsB,SAAS,CAAC,sDAAsD,CAAAC,QAAA,CAEpEjB,QAAQ,CAACkB,GAAG,CAAC,SAAAC,OAAO,qBACfzB,IAAA,CAACL,IAAI,EACD+B,IAAI,CAAED,OAAO,CAACC,IAAK,CACnBC,KAAK,CAAEF,OAAO,CAACE,KAAM,CACrBC,IAAI,CAAEH,OAAO,CAACG,IAAK,CACnBC,IAAI,CAAEJ,OAAO,CAACI,IAAK,CAEtB,CAAC,EACL,CAAC,CACC,CACJ,CACE,CAAC,CAEV,CACA,cAAe,CAAA3B,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}